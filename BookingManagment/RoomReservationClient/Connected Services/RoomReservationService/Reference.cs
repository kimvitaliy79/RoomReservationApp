//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoomReservationClient.RoomReservationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingDetails", Namespace="http://schemas.datacontract.org/2004/07/RoomReservationService.Model")]
    [System.SerializableAttribute()]
    public partial class BookingDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdvancePayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookedDateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookedDateTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdvancePayed {
            get {
                return this.AdvancePayedField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvancePayedField, value) != true)) {
                    this.AdvancePayedField = value;
                    this.RaisePropertyChanged("AdvancePayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookedDateFrom {
            get {
                return this.BookedDateFromField;
            }
            set {
                if ((object.ReferenceEquals(this.BookedDateFromField, value) != true)) {
                    this.BookedDateFromField = value;
                    this.RaisePropertyChanged("BookedDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookedDateTO {
            get {
                return this.BookedDateTOField;
            }
            set {
                if ((object.ReferenceEquals(this.BookedDateTOField, value) != true)) {
                    this.BookedDateTOField = value;
                    this.RaisePropertyChanged("BookedDateTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingID {
            get {
                return this.BookingIDField;
            }
            set {
                if ((this.BookingIDField.Equals(value) != true)) {
                    this.BookingIDField = value;
                    this.RaisePropertyChanged("BookingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingStatus {
            get {
                return this.BookingStatusField;
            }
            set {
                if ((this.BookingStatusField.Equals(value) != true)) {
                    this.BookingStatusField = value;
                    this.RaisePropertyChanged("BookingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoomReservationService.IRoomReservationService")]
    public interface IRoomReservationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/BookingRooms", ReplyAction="http://tempuri.org/IRoomReservationService/BookingRoomsResponse")]
        RoomReservationClient.RoomReservationService.BookingDetails[] BookingRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/BookingRooms", ReplyAction="http://tempuri.org/IRoomReservationService/BookingRoomsResponse")]
        System.Threading.Tasks.Task<RoomReservationClient.RoomReservationService.BookingDetails[]> BookingRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/AddEditBookingRoom", ReplyAction="http://tempuri.org/IRoomReservationService/AddEditBookingRoomResponse")]
        int AddEditBookingRoom(RoomReservationClient.RoomReservationService.BookingDetails bookingRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/AddEditBookingRoom", ReplyAction="http://tempuri.org/IRoomReservationService/AddEditBookingRoomResponse")]
        System.Threading.Tasks.Task<int> AddEditBookingRoomAsync(RoomReservationClient.RoomReservationService.BookingDetails bookingRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/DeleteBookingRoom", ReplyAction="http://tempuri.org/IRoomReservationService/DeleteBookingRoomResponse")]
        int DeleteBookingRoom(int bookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/DeleteBookingRoom", ReplyAction="http://tempuri.org/IRoomReservationService/DeleteBookingRoomResponse")]
        System.Threading.Tasks.Task<int> DeleteBookingRoomAsync(int bookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/GetBookingRoom", ReplyAction="http://tempuri.org/IRoomReservationService/GetBookingRoomResponse")]
        RoomReservationClient.RoomReservationService.BookingDetails GetBookingRoom(int bookingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomReservationService/GetBookingRoom", ReplyAction="http://tempuri.org/IRoomReservationService/GetBookingRoomResponse")]
        System.Threading.Tasks.Task<RoomReservationClient.RoomReservationService.BookingDetails> GetBookingRoomAsync(int bookingID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomReservationServiceChannel : RoomReservationClient.RoomReservationService.IRoomReservationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomReservationServiceClient : System.ServiceModel.ClientBase<RoomReservationClient.RoomReservationService.IRoomReservationService>, RoomReservationClient.RoomReservationService.IRoomReservationService {
        
        public RoomReservationServiceClient() {
        }
        
        public RoomReservationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomReservationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomReservationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomReservationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RoomReservationClient.RoomReservationService.BookingDetails[] BookingRooms() {
            return base.Channel.BookingRooms();
        }
        
        public System.Threading.Tasks.Task<RoomReservationClient.RoomReservationService.BookingDetails[]> BookingRoomsAsync() {
            return base.Channel.BookingRoomsAsync();
        }
        
        public int AddEditBookingRoom(RoomReservationClient.RoomReservationService.BookingDetails bookingRoom) {
            return base.Channel.AddEditBookingRoom(bookingRoom);
        }
        
        public System.Threading.Tasks.Task<int> AddEditBookingRoomAsync(RoomReservationClient.RoomReservationService.BookingDetails bookingRoom) {
            return base.Channel.AddEditBookingRoomAsync(bookingRoom);
        }
        
        public int DeleteBookingRoom(int bookingID) {
            return base.Channel.DeleteBookingRoom(bookingID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteBookingRoomAsync(int bookingID) {
            return base.Channel.DeleteBookingRoomAsync(bookingID);
        }
        
        public RoomReservationClient.RoomReservationService.BookingDetails GetBookingRoom(int bookingID) {
            return base.Channel.GetBookingRoom(bookingID);
        }
        
        public System.Threading.Tasks.Task<RoomReservationClient.RoomReservationService.BookingDetails> GetBookingRoomAsync(int bookingID) {
            return base.Channel.GetBookingRoomAsync(bookingID);
        }
    }
}
